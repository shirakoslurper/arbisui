public get_input_price_uncorrelated(Arg0: u64, Arg1: u64, Arg2: u64, Arg3: u64): u64 {
L0:	loc4: u128
L1:	loc5: u128
B0:
	0: MoveLoc[0](Arg0: u64)
	1: CastU128
	2: MoveLoc[1](Arg1: u64)
	3: CastU128
	4: MoveLoc[2](Arg2: u64)
	5: CastU128
	6: MoveLoc[3](Arg3: u64)
	7: CastU128
	8: StLoc[5](loc1: u128)
	9: StLoc[9](loc5: u128)
	10: StLoc[7](loc3: u128)
	11: LdConst[0](U128: 40420f00..)
	12: MoveLoc[5](loc1: u128)
	13: Sub
	14: Mul
	15: StLoc[6](loc2: u128)
	16: CopyLoc[6](loc2: u128)
	17: MoveLoc[9](loc5: u128)
	18: Mul
	19: StLoc[8](loc4: u128)
	20: MoveLoc[7](loc3: u128)
	21: LdConst[0](U128: 40420f00..)
	22: Mul
	23: MoveLoc[6](loc2: u128)
	24: Add
	25: StLoc[4](loc0: u128)
	26: MoveLoc[8](loc4: u128)
	27: MoveLoc[4](loc0: u128)
	28: Div
	29: CastU64
	30: Ret
}
public get_input_price_stable(Arg0: u64, Arg1: u64, Arg2: u64, Arg3: u64, Arg4: u64, Arg5: u64): u64 {
B0:
	0: LdConst[1](U128: 00e1f505..)
	1: CastU256
	2: StLoc[9](loc3: u256)
	3: CopyLoc[1](Arg1: u64)
	4: CastU128
	5: CopyLoc[4](Arg4: u64)
	6: CopyLoc[2](Arg2: u64)
	7: CastU128
	8: CopyLoc[5](Arg5: u64)
	9: Call lp_value(u128, u64, u128, u64): u256
	10: StLoc[10](loc4: u256)
	11: MoveLoc[1](Arg1: u64)
	12: CastU256
	13: CopyLoc[9](loc3: u256)
	14: Mul
	15: CopyLoc[4](Arg4: u64)
	16: CastU256
	17: Div
	18: StLoc[6](loc0: u256)
	19: MoveLoc[2](Arg2: u64)
	20: CastU256
	21: CopyLoc[9](loc3: u256)
	22: Mul
	23: CopyLoc[5](Arg5: u64)
	24: CastU256
	25: Div
	26: StLoc[7](loc1: u256)
	27: MoveLoc[0](Arg0: u64)
	28: CastU256
	29: CopyLoc[9](loc3: u256)
	30: Mul
	31: MoveLoc[4](Arg4: u64)
	32: CastU256
	33: Div
	34: CastU256
	35: LdConst[0](U128: 40420f00..)
	36: MoveLoc[3](Arg3: u64)
	37: CastU128
	38: Sub
	39: CastU256
	40: Mul
	41: LdConst[0](U128: 40420f00..)
	42: CastU256
	43: Div
	44: MoveLoc[6](loc0: u256)
	45: Add
	46: StLoc[8](loc2: u256)
	47: CopyLoc[7](loc1: u256)
	48: MoveLoc[8](loc2: u256)
	49: MoveLoc[10](loc4: u256)
	50: MoveLoc[7](loc1: u256)
	51: Call get_y(u256, u256, u256): u256
	52: Sub
	53: MoveLoc[5](Arg5: u64)
	54: CastU256
	55: Mul
	56: MoveLoc[9](loc3: u256)
	57: Div
	58: CastU64
	59: Ret
}
public lp_value(Arg0: u128, Arg1: u64, Arg2: u128, Arg3: u64): u256 {
L0:	loc4: u256
L1:	loc5: u256
L2:	loc6: u256
L3:	loc7: u256
L4:	loc8: u256
B0:
	0: MoveLoc[0](Arg0: u128)
	1: CastU256
	2: StLoc[10](loc6: u256)
	3: MoveLoc[2](Arg2: u128)
	4: CastU256
	5: StLoc[12](loc8: u256)
	6: LdConst[1](U128: 00e1f505..)
	7: CastU256
	8: StLoc[8](loc4: u256)
	9: MoveLoc[1](Arg1: u64)
	10: CastU256
	11: StLoc[9](loc5: u256)
	12: MoveLoc[3](Arg3: u64)
	13: CastU256
	14: StLoc[11](loc7: u256)
	15: MoveLoc[10](loc6: u256)
	16: CopyLoc[8](loc4: u256)
	17: Mul
	18: MoveLoc[9](loc5: u256)
	19: Div
	20: StLoc[6](loc2: u256)
	21: MoveLoc[12](loc8: u256)
	22: MoveLoc[8](loc4: u256)
	23: Mul
	24: MoveLoc[11](loc7: u256)
	25: Div
	26: StLoc[7](loc3: u256)
	27: CopyLoc[6](loc2: u256)
	28: CopyLoc[7](loc3: u256)
	29: Mul
	30: StLoc[4](loc0: u256)
	31: CopyLoc[6](loc2: u256)
	32: MoveLoc[6](loc2: u256)
	33: Mul
	34: CopyLoc[7](loc3: u256)
	35: MoveLoc[7](loc3: u256)
	36: Mul
	37: Add
	38: StLoc[5](loc1: u256)
	39: MoveLoc[4](loc0: u256)
	40: MoveLoc[5](loc1: u256)
	41: Mul
	42: Ret
}
get_y(Arg0: u256, Arg1: u256, Arg2: u256): u256 {
L0:	loc3: u256
B0:
	0: LdU64(0)
	1: StLoc[4](loc1: u64)
	2: LdU256(1)
	3: StLoc[6](loc3: u256)
B1:
	4: CopyLoc[4](loc1: u64)
	5: LdU64(255)
	6: Lt
	7: BrFalse(59)
B2:
	8: Branch(9)
B3:
	9: CopyLoc[0](Arg0: u256)
	10: CopyLoc[2](Arg2: u256)
	11: Call f(u256, u256): u256
	12: StLoc[5](loc2: u256)
	13: LdU256(0)
	14: Pop
	15: CopyLoc[1](Arg1: u256)
	16: CopyLoc[5](loc2: u256)
	17: Gt
	18: BrFalse(34)
B4:
	19: CopyLoc[1](Arg1: u256)
	20: MoveLoc[5](loc2: u256)
	21: Sub
	22: CopyLoc[0](Arg0: u256)
	23: CopyLoc[2](Arg2: u256)
	24: Call d(u256, u256): u256
	25: Div
	26: CopyLoc[6](loc3: u256)
	27: Add
	28: StLoc[3](loc0: u256)
	29: MoveLoc[2](Arg2: u256)
	30: CopyLoc[3](loc0: u256)
	31: Add
	32: StLoc[2](Arg2: u256)
	33: Branch(48)
B5:
	34: MoveLoc[5](loc2: u256)
	35: CopyLoc[1](Arg1: u256)
	36: Sub
	37: CopyLoc[0](Arg0: u256)
	38: CopyLoc[2](Arg2: u256)
	39: Call d(u256, u256): u256
	40: Div
	41: CopyLoc[6](loc3: u256)
	42: Add
	43: StLoc[3](loc0: u256)
	44: MoveLoc[2](Arg2: u256)
	45: CopyLoc[3](loc0: u256)
	46: Sub
	47: StLoc[2](Arg2: u256)
B6:
	48: MoveLoc[3](loc0: u256)
	49: CopyLoc[6](loc3: u256)
	50: Le
	51: BrFalse(54)
B7:
	52: MoveLoc[2](Arg2: u256)
	53: Ret
B8:
	54: MoveLoc[4](loc1: u64)
	55: LdU64(1)
	56: Add
	57: StLoc[4](loc1: u64)
	58: Branch(4)
B9:
	59: MoveLoc[2](Arg2: u256)
	60: Ret
}
f(Arg0: u256, Arg1: u256): u256 {
L0:	loc2: u256
B0:
	0: CopyLoc[1](Arg1: u256)
	1: CopyLoc[1](Arg1: u256)
	2: Mul
	3: CopyLoc[1](Arg1: u256)
	4: Mul
	5: StLoc[4](loc2: u256)
	6: CopyLoc[0](Arg0: u256)
	7: MoveLoc[4](loc2: u256)
	8: Mul
	9: StLoc[2](loc0: u256)
	10: CopyLoc[0](Arg0: u256)
	11: CopyLoc[0](Arg0: u256)
	12: Mul
	13: MoveLoc[0](Arg0: u256)
	14: Mul
	15: MoveLoc[1](Arg1: u256)
	16: Mul
	17: StLoc[3](loc1: u256)
	18: MoveLoc[2](loc0: u256)
	19: MoveLoc[3](loc1: u256)
	20: Add
	21: Ret
}
d(Arg0: u256, Arg1: u256): u256 {
L0:	loc2: u256
L1:	loc3: u256
B0:
	0: LdU256(3)
	1: CopyLoc[0](Arg0: u256)
	2: Mul
	3: StLoc[2](loc0: u256)
	4: CopyLoc[1](Arg1: u256)
	5: MoveLoc[1](Arg1: u256)
	6: Mul
	7: StLoc[5](loc3: u256)
	8: MoveLoc[2](loc0: u256)
	9: MoveLoc[5](loc3: u256)
	10: Mul
	11: StLoc[4](loc2: u256)
	12: CopyLoc[0](Arg0: u256)
	13: CopyLoc[0](Arg0: u256)
	14: Mul
	15: MoveLoc[0](Arg0: u256)
	16: Mul
	17: StLoc[3](loc1: u256)
	18: MoveLoc[4](loc2: u256)
	19: MoveLoc[3](loc1: u256)
	20: Add
	21: Ret
}